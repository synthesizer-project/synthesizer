# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Synthesizer

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: ["3.9", "3.10", "3.11"] # 3.12 fails at flake8

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install flake8 pytest
        pip install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # ignores: 
        # - E402 "module level import not at top of file" (isolate C imports in case python alternatives exist)
        # - W503 "line break before binary operator" (we enforce line breaks before operators, to follow black style, and penalise line breaks after)
        # - F811 "redefinition of unused name from line N" (breaks quantity objects)
        # - E203 "whitespace before ‘,’, ‘;’, or ‘:’" (conflicts with black formatting of array indexing, `:`)
        flake8 . --count --ignore=E402,W503,F811,E203 --max-line-length=79 --show-source --statistics --per-file-ignores="src/synthesizer/__init__.py:F401 src/synthesizer/abundances/__init__.py:F401 src/synthesizer/components/__init__.py:F401 src/synthesizer/imaging/__init__.py:F401 src/synthesizer/parametric/__init__.py:F401 src/synthesizer/particle/__init__.py:F401 src/synthesizer/photoionisation/__init__.py:F401 docs/source/conf.py:E501"
    - name: Download test data
      run: |
        # download test grid data
        synthesizer-download --test-grids -d tests/test_grid/ --dust-grid
    - name: Test with pytest
      run: |
        pytest
        # test ipython notebooks
        pytest --nbmake docs/source/*.ipynb docs/source/*/*.ipynb
    - name: Sphinx Build
      run: |
        # test sphinx build (runs all notebooks)
        cd docs
        sudo apt install pandoc
        pip install -r requirements.txt
        make clean
        make html
